name: e2e full suite
on: pull_request
jobs:
  wait-for-calypso-live:
    name: Wait for Calypso.live
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, '[Status] Needs Review') || contains(github.event.pull_request.labels.*.name, '[Status] Needs e2e Testing') || contains(github.event.pull_request.labels.*.name, '[Status] Needs e2e Testing Gutenberg Edge') || contains(github.event.pull_request.labels.*.name, '[Status] Needs e2e Testing horizon')
    steps:
      - uses: actions/checkout@v2
      - name: Prime calypso.live
        run: curl --silent "https://hash-${{ github.event.pull_request.head.sha }}.calypso.live"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn modules
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn-modules
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: v1-yarn-modules-{{ hashFiles('**/.nvmrc') }}-{{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-modules-{{ hashFiles('**/.nvmrc') }}-{{ hashFiles('**/yarn.lock') }}
            v1-yarn-modules-{{ hashFiles('**/.nvmrc') }}
      - name: Install yarn deps
        env:
          CHROMEDRIVER_FORCE_DOWNLOAD: true
        run: yarn install --frozen-lockfile
      - name: Check external author
        run: |
              if [[ ! -z $CIRCLE_PR_USERNAME ]]; then
                echo 'PRs from external authors cannot run on calypso.live'
                exit 1
              fi
      - name: Wait for calypso.live build
        if: github.event_name == 'pull_request' && ( github.event.action == 'labeled' || github.event.action == 'synchronize' )
        env:
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
        run: ./test/e2e/scripts/wait-for-running-branch.sh
  e2e-full-suite:
    name: e2e Full Suite
    runs-on: ubuntu-latest
    needs: wait-for-calypso-live
    strategy:
      fail-fast: false
      matrix:
        screensize: [desktop, mobile]
        ci_node_total: [9]
        ci_node_index: [0, 1, 2, 3, 4, 5, 6, 7, 8]
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn modules
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn-modules
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: v1-yarn-modules-{{ hashFiles('**/.nvmrc') }}-{{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-yarn-modules-{{ hashFiles('**/.nvmrc') }}-{{ hashFiles('**/yarn.lock') }}
            v1-yarn-modules-{{ hashFiles('**/.nvmrc') }}
      - name: Install yarn deps
        env:
          CHROMEDRIVER_FORCE_DOWNLOAD: true
        run: cd test/e2e && yarn install --frozen-lockfile --ignore-scripts
      - name: Decrypt Config
        env:
          NODE_CONFIG_ENV: test
          CONFIG_KEY: ${{ secrets.CONFIG_KEY }}
        run: cd test/e2e && npm run decryptconfig
      - name: Split Test files
        id: split-test-files
        run: |
          cd test/e2e &&
          echo "::set-output name=files::\"$(npx mocha-split-tests -r ./runtime.log -f 'specs*/**/*spec.js' -s ',' -t ${{ matrix.ci_node_total }} -g ${{ matrix.ci_node_index }})\""
      - name: Run Tests
        env:
          NODE_CONFIG_ENV: test
          BRANCHNAME: $GITHUB_REF
          TEST_VIDEO: true
        run: cd test/e2e && ./run.sh -R -g -s ${{ matrix.screensize }} -S ${{ github.event.pull_request.head.sha }} -f ${{ steps.split-test-files.outputs.files }}
      - uses: actions/upload-artifact@master
        if: always()
        with:
          name: screenshots
          path: ./test/e2e/screenshots
